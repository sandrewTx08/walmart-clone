### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Brands {
  id: Int!
  name: String!
}

type Carts {
  catalog_id: Int!
  currency_price: String!
  image: String!
  name: String!
  price: Int!
  product_id: Int!
  quantity: Int!
  user_id: String!
}

type Catalogs {
  Products: Products!
  currency_price: String!
  id: Int!
  price: Int!
  product_id: Int!
  totalPages: Int!
}

type Departments {
  _count: Int!
  catalog(brand_id: Int, limit: Int!, page: Int, price_sort: OrderBy, store_id: Int): [Catalogs!]
  id: Int!
  name: String!
}

type Mutation {
  cartDelete(catalog_id: Int!, user_id: String!): Carts
  cartUpdate(catalog_id: Int!, quantity: Int!, user_id: String!): Carts
}

enum OrderBy {
  asc
  desc
}

type ProductRates {
  Users: Users!
  _count: Int!
  description: String!
  id: Int!
  product_id: Int!
  rate: String!
  user_id: String!
}

type Products {
  Brands: Brands!
  Departments: Departments!
  ProductRates(limit: Int): [ProductRates]!
  brand_id: Int!
  id: Int!
  name: String!
}

type Query {
  cart(user_id: String!): [Carts]!
  catalog(catalog_id: Int!): Catalogs!
  department(department_id: Int!): Departments!
  departments: [Departments!]
  productBrands(department_id: Int!): [Brands!]
  stores: [Stores]!
}

type Stores {
  id: Int!
  name: String!
}

type Users {
  first_name: String!
  id: String!
}